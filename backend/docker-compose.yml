version: '3.8'

services:
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: yarn start:dev auth
    env_file:
      - ./apps/auth/.env
    ports:
      - '2610:2610'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/apps/auth/node_modules

  notifications:
    build:
      context: .
      dockerfile: ./apps/notifications/Dockerfile
      target: development
    command: yarn start:dev notifications
    env_file:
      - ./apps/notifications/.env
    ports:
      - '2612:2612'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/apps/notifications/node_modules

  calibrate:
    build:
      context: .
      dockerfile: ./apps/calibrate/Dockerfile
      target: development
    command: yarn start:dev calibrate
    env_file:
      - ./apps/calibrate/.env
    ports:
      - '2614:2614'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/apps/calibrate/node_modules

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - kafka_net

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - kafka_net

  spark:
    image: bitnami/spark:latest
    ports:
      - "8080:8080"
    environment:
      SPARK_MODE: master
      SPARK_MASTER_HOST: spark-master
      SPARK_MASTER_PORT: 7077
    networks:
      - spark_net

  spark-worker:
    image: bitnami/spark:latest
    ports:
      - "9090:8080"
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
    networks:
      - spark_net
    depends_on:
      - spark

  postgres:
    image: postgres
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
  kafka_data:

networks:
  kafka_net:
  spark_net: